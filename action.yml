name: 'DocGuard'
description: 'Ensure your documentation answers critical questions'
author: 'DocGuard'
branding:
  icon: 'check-circle'
  color: 'blue'

inputs:
  config:
    description: 'Path to docguard.yml config file'
    required: false
    default: 'docguard.yml'
  openai-key:
    description: 'OpenAI API key'
    required: false
  anthropic-key:
    description: 'Anthropic API key'
    required: false
  format:
    description: 'Output format (terminal, json, github)'
    required: false
    default: 'github'

runs:
  using: 'composite'
  steps:
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Run DocGuard
      shell: bash
      run: |
        npx docguard@latest check \
          --config ${{ inputs.config }} \
          --format ${{ inputs.format }}
      env:
        OPENAI_API_KEY: ${{ inputs.openai-key }}
        ANTHROPIC_API_KEY: ${{ inputs.anthropic-key }}

    - name: Comment PR
      if: github.event_name == 'pull_request' && inputs.format == 'github'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const comment = fs.readFileSync('docguard-comment.md', 'utf8');

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
