name: ðŸ“¦ Release

on:
  push:
    branches:
      - main
      - stable
      - '*.x' # Maintenance branches
    paths-ignore:
      - '**.md'
      - '.github/workflows/*.yml'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint and type check
        run: |
          pnpm lint
          pnpm type-check

      - name: Build
        run: pnpm build

      # - name: Test
      #   run: pnpm test

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Get branch info
        run: |
          echo "Branch: ${{ github.ref_name }}"
          echo "Event: ${{ github.event_name }}"
          git branch -r
          git tag -l

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      # Sync stable back to main after stable release
      - name: Sync stable to main
        if: github.ref == 'refs/heads/stable' && steps.release.outputs.released == '0'
        run: |
          git fetch origin main
          git checkout main
          git merge stable -m "chore: sync stable release to main [skip ci]"
          git push origin main
